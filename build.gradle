apply plugin: 'com.android.library'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

allprojects {
    repositories {
        maven { url "https://www.jitpack.io" }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'cn.bingoogolapple:bga-refreshlayout:1.1.7@aar'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'cn.bingoogolapple:bga-refreshlayout:1.1.7@aar'
    compile 'com.google.code.gson:gson:2.6.1'
    compile 'com.android.support:percent:24.0.0'
    compile 'com.github.yaming116:UpdateApp:1.0.3'
}

//打包添加
task clearJar(type: Delete) {
    delete 'build/libs/mySdk.jar'////这行表示如果你已经打过一次包了，再进行打包则把原来的包删掉
}

task makeJar(type: Copy) {
    from('build/intermediates/bundles/release/') //这行表示要打包的文件的路径，根据下面的内容，其实是该路径下的classes.jar
    into('build/libs/')  //这行表示打包完毕后包的生成路径，也就是生成的包存在哪
    include('classes.jar')  //看到这行，如果你对分包有了解的话，你就可以看出来这行它只是将一些类打包了
    rename ('classes.jar', 'mySdk.jar')
}

makeJar.dependsOn(clearJar, build)